{"version":3,"sources":["../packages/sandbox/glsl/defaults.js","../packages/sandbox/glsl/get.js","../packages/sandbox/glsl/setup.js","../packages/sandbox/glsl/utils.js","../packages/sandbox/glsl/glsl-resolve-browser.js","../packages/sandbox/glsl/glslify-deps.js","../packages/sandbox/glsl/glslify.js","../packages/sandbox/glsl/index.js"],"names":["fragment","vertex","get","url","opts","cb","type","async","xhr","global","XMLHttpRequest","ActiveXObject","e","Error","makeRequest","open","setRequestHeader","send","status","responseText","statusText","onload","onerror","sync","getShaderError","gl","source","vertext","shader","createShader","VERTEX_SHADER","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","setup","canvas","onError","attributes","uniforms","restOps","regl","createRegl","resizer","canvasFit","_gl","glsl","glslify","fn","err","frag","defaults","vert","drawTriangle","position","buffer","time","prop","resolution","count","frame","clear","color","depth","drawingBufferWidth","drawingBufferHeight","draw","addEventListener","removeEventListener","detachResize","destroy","fallback","creator","createLocalStorageCache","cache","set","key","value","remove","Object","keys","forEach","prefix","localStorage","setItem","getItem","removeItem","check","wrapCache","console","log","_cache","done","cached","args","length","pop","process","nextTick","result","defaultExts","formatUrl","base","URL","join","replace","matchExt","pkgName","exts","RegExp","test","parseOptions","resolve","i","next","urlPath","message","DepperBrowser","readFile","glslResolve","transformRequire","filename","this","_deps","_i","Depper","depper","glslifyBundle","require","glslifyDeps","inline","deps","String","GlslSandbox","className","useState","error","setError","canvasRef","useRef","drawRef","useLayoutEffect","current","_jsxs","children","_jsx","ref","defaultValue","styled","withConfig","displayName","componentId"],"mappings":"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","file":"static/js/4.85499298.chunk.js","sourcesContent":["export const fragment = `\nprecision mediump float;\nuniform float time;\nuniform vec2 resolution;\n\nvoid main() {\n  vec2 uv = gl_FragCoord.xy/resolution.xy;\n\n  vec3 col = 0.5 + 0.5 * cos(time+uv.xyx+vec3(0,2,4));\n  gl_FragColor = vec4(col,1.0);\n}\n`;\nexport const vertex = `\nprecision mediump float;\nattribute vec2 position;\nvoid main() {\n  gl_Position = vec4(position, 0, 1);\n}`;","const makeRequest = () => {\n  if (global.XMLHttpRequest) {\n    // Mozilla, Safari, ...\n    return new global.XMLHttpRequest();\n  } else if (global.ActiveXObject) {\n    // IE\n    try {\n      return new global.ActiveXObject(\"Msxml2.XMLHTTP\");\n    } catch (e) {\n      try {\n        return new global.ActiveXObject(\"Microsoft.XMLHTTP\");\n      } catch (e) {}\n    }\n  }\n\n  throw new Error(\"Giving up :( Cannot create an XMLHTTP instance\");\n};\n\nconst get = (url, opts, cb) => {\n  if (typeof opts === \"function\") {\n    cb = opts;\n    opts = {};\n  }\n\n  const {\n    type = \"GET\",\n    async = !!cb\n  } = { ...opts\n  };\n  let xhr = makeRequest();\n  xhr.open(type, url, async);\n  xhr.setRequestHeader(\"Cache-Control\", \"no-cache\");\n\n  if (!async) {\n    xhr.send();\n\n    if (xhr.status < 400) {\n      return xhr.responseText;\n    } else {\n      throw new Error(`${xhr.status} - ${xhr.statusText}`);\n    }\n  }\n\n  xhr.onload = () => {\n    if (xhr.status < 400) {\n      cb(null, xhr.responseText);\n    } else {\n      cb(new Error(`${xhr.status} - ${xhr.statusText}`));\n    }\n  };\n\n  xhr.onerror = () => cb(new Error(`${xhr.status} - ${xhr.statusText}`));\n\n  xhr.send();\n};\n\nget.sync = (url, opts) => get(url, {\n  async: false,\n  ...opts\n});\n\nexport default get;","import canvasFit from \"canvas-fit\";\nimport createRegl from \"regl/dist/regl.unchecked\"; // import createRegl from \"regl/dist/regl.js\";\n\nimport glslify from \"./glslify\";\nimport * as defaults from \"./defaults\";\n\nconst attachResize = fn => {\n  if (global.addEventListener) {\n    global.addEventListener(\"resize\", fn, false);\n  }\n};\n\nconst detachResize = fn => {\n  if (global.removeEventListener) {\n    global.removeEventListener(\"resize\", fn);\n  }\n};\n\nconst getShaderError = (gl, source, vertext) => {\n  var shader = gl.createShader(vertext ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER);\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader); // Check for any compilation error\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    return gl.getShaderInfoLog(shader);\n  }\n\n  return null;\n};\n\nconst setup = (canvas, opts) => {\n  const {\n    onError,\n    attributes,\n    uniforms,\n    ...restOps\n  } = { ...opts\n  };\n  const regl = createRegl(canvas);\n  const resizer = canvasFit(canvas);\n  const gl = regl._gl;\n  const glsl = glslify(opts);\n  return fragment => {\n    const draw = ({\n      frag = defaults.fragment,\n      vert = defaults.vertex\n    } = {}) => {\n      const err = getShaderError(gl, frag);\n\n      if (err && onError) {\n        return onError(new Error(err));\n      }\n\n      const drawTriangle = regl({ ...restOps,\n        frag,\n        vert,\n        attributes: {\n          position: regl.buffer([[-1, -1], [-1, 4], [4, -1] // [-2, -2],\n          // [4, -2],\n          // [4, 4],\n          ]),\n          ...attributes\n        },\n        uniforms: {\n          time: regl.prop(\"time\"),\n          resolution: regl.prop(\"resolution\"),\n          ...uniforms\n        },\n        count: 3\n      });\n      regl.frame(({\n        time\n      }) => {\n        regl.clear({\n          color: [0, 0, 0, 0],\n          depth: 1\n        });\n        drawTriangle({\n          time,\n          resolution: [gl.drawingBufferWidth, gl.drawingBufferHeight]\n        });\n      });\n    };\n\n    glsl(fragment, (err, frag) => {\n      if (err) {\n        if (onError) {\n          return onError(err);\n        }\n\n        throw err;\n      }\n\n      draw({\n        frag\n      });\n    });\n    attachResize(resizer);\n    return () => {\n      detachResize(resizer);\n      regl.destroy();\n    };\n  };\n};\n\nexport default setup;","const createCacheBackend = (check, fallback, creator) => check() ? creator : fallback;\n\nconst createMemoryCache = () => {\n  const cache = {};\n  return {\n    set: (key, value) => {\n      cache[key] = value;\n    },\n    get: key => cache[key],\n    remove: key => {\n      delete cache[key];\n    },\n    clear: () => Object.keys(cache).forEach(key => {\n      delete cache[key];\n    })\n  };\n};\n\nconst createLocalStorageCache = createCacheBackend(() => global.localStorage, createMemoryCache, opts => {\n  const {\n    prefix = \"\"\n  } = { ...opts\n  };\n  const cache = global.localStorage;\n  return {\n    set: (key, value) => {\n      cache.setItem(`${prefix}${key}`, value);\n    },\n    get: key => cache.getItem(`${prefix}${key}`),\n    remove: key => {\n      cache.removeItem(`${prefix}${key}`);\n    },\n    clear: () => {\n      cache.clear();\n    }\n  };\n});\nexport const wrapCache = (async, sync = async.sync) => {\n  console.log(\"wrapCache\");\n  return cache => {\n    const _cache = cache || createLocalStorageCache();\n\n    return (key, ...args) => {\n      let done;\n\n      const cached = _cache.get(key);\n\n      if (typeof args[args.length - 1] === \"function\") {\n        done = args.pop();\n      }\n\n      if (cached) {\n        if (!done) {\n          return cached;\n        }\n\n        process.nextTick(() => done(null, cached));\n      } else {\n        if (!done) {\n          const result = sync(key, ...args);\n\n          _cache.set(key, result);\n\n          return result;\n        }\n\n        async(key, ...args, (err, result) => {\n          if (err) return done(err);\n\n          _cache.set(key, result, done);\n        });\n      }\n    };\n  };\n};","import get from \"./get\";\nexport const urlJoin = (...args) => args.join(\"/\").replace(/\\/+/, \"/\");\nconst defaultExts = [\".glsl\", \".vert\", \".frag\", \".geom\", \".vs\", \".fs\", \".gs\", \".vsh\", \".fsh\", \".gsh\", \".vshader\", \".fshader\", \".gshader\"];\n\nconst formatUrl = (base, ...args) => new URL(args.join(\"/\").replace(/\\/+/, \"/\"), base);\n\nconst matchExt = (pkgName, exts) => new RegExp(`(${exts.join(\"|\")})$`).test(pkgName);\n\nconst parseOptions = opts => ({\n  url: \"https://unpkg.com/\",\n  // url: \"https://cdn.jsdelivr.net/npm/\",\n  get: get,\n  exts: defaultExts,\n  type: \"HEAD\",\n  ...opts\n});\n\nconst resolve = (pkgName, opts, done) => {\n  const {\n    url,\n    get,\n    exts,\n    type\n  } = parseOptions(opts);\n  let i = 0 - matchExt(pkgName, exts);\n\n  const next = () => {\n    if (i < exts.length) {\n      const urlPath = formatUrl(url, pkgName + (exts[i++] || \"\")) + \"\";\n      get(urlPath, {\n        type\n      }, err => {\n        if (err && /^404/.test(err.message)) {\n          next();\n        } else {\n          done(null, urlPath);\n        }\n      });\n    } else {\n      done(new Error(`${pkgName} Not found`));\n    }\n  };\n\n  next();\n};\n\nresolve.sync = (pkgName, opts) => {\n  const {\n    url,\n    get,\n    exts,\n    type\n  } = parseOptions(opts);\n  let i = 0 - matchExt(pkgName, exts);\n\n  do {\n    try {\n      const urlPath = formatUrl(url, pkgName + (exts[i++] || \"\")) + \"\";\n      get(urlPath, {\n        type\n      });\n      return urlPath;\n    } catch (err) {\n      if (!/^404/.test(err.message)) {\n        throw new Error(`${pkgName} Not found`);\n      }\n    }\n  } while (i < exts.length);\n};\n\nexport default resolve;\nexport const sync = resolve.sync;\nexport const createCachedResolver = (cache = {}) => {\n  return (pkgName, opts, done) => {\n    if (cache[pkgName]) {\n      if (!done) {\n        return cache[pkgName];\n      }\n\n      done(null, cache[pkgName]);\n    }\n\n    if (!done) {\n      cache[pkgName] = resolve(pkgName, opts);\n      return cache[pkgName];\n    }\n\n    resolve(pkgName, opts, (err, resolved) => {\n      if (err) return done(err);\n      cache[pkgName] = resolved;\n      done(null, resolved);\n    });\n  };\n};\n/**\n * TODO LIST\n * - Check firts package.json to determine if the pacakge exists\n * - Cache with compression lmza https://github.com/LZMA-JS/LZMA-JS\n */","/* eslint-disable */\nimport Depper from 'glslify-deps/depper';\nimport { wrapCache } from './utils';\nimport glslResolve from './glsl-resolve-browser';\nimport get from './get';\n\nclass DepperBrowser extends Depper {\n  constructor(opts) {\n    super({ ...opts,\n      async: true,\n      readFile: wrapCache(get)(),\n      resolve: wrapCache(glslResolve)(),\n      transformRequire: (filename, done) => {\n        console.log('transformRequire', filename, done);\n      }\n    });\n  }\n\n  inline(source, done) {\n    this._deps = [];\n    this._i = 0;\n    return super.inline(source, null, done);\n  }\n\n  getTransformsForFile(filename, done) {\n    console.log(filename); // this.readFile('')\n\n    done(null, []);\n    return [];\n  }\n\n}\n\nconst depper = opts => {\n  return new DepperBrowser(opts);\n};\n\nexport default depper;","import glslifyDeps from \"./glslify-deps\";\n\nconst glslifyBundle = require(\"glslify-bundle\");\n\nconst glslify = opts => {\n  const depper = glslifyDeps(opts);\n  return (source, cb) => {\n    depper.inline(source, (err, deps) => {\n      if (err) return cb(err);\n      cb(null, String(glslifyBundle(deps)));\n    });\n  };\n};\n\nexport default glslify;","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRef, useLayoutEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { vertex } from \"./defaults\";\nimport setup from \"./setup\";\n\nconst GlslSandbox = ({\n  className,\n  value,\n  onError\n}) => {\n  const [error, setError] = useState();\n  const canvasRef = useRef(null);\n  const drawRef = useRef(null);\n  useLayoutEffect(() => {\n    if (canvasRef.current) {\n      drawRef.current = setup(canvasRef.current, {\n        onError: err => {\n          if (onError) {\n            onError(onError);\n          }\n\n          setError(err);\n        }\n      });\n    }\n  }, [canvasRef, onError]);\n  useLayoutEffect(() => {\n    if (drawRef.current) {\n      return drawRef.current(value);\n    }\n  }, [drawRef, value]);\n  useLayoutEffect(() => {\n    if (error) {\n      setError(null);\n    }\n  }, [value]);\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: className,\n    children: [error && /*#__PURE__*/_jsx(\"div\", {\n      className: \"error-overlay\",\n      children: /*#__PURE__*/_jsx(\"pre\", {\n        children: /*#__PURE__*/_jsx(\"code\", {\n          children: error.message\n        })\n      })\n    }), /*#__PURE__*/_jsx(\"canvas\", {\n      ref: canvasRef\n    })]\n  });\n};\n\nGlslSandbox.defaultValue = vertex;\nexport default styled(GlslSandbox).withConfig({\n  displayName: \"glsl\",\n  componentId: \"vb91tm-0\"\n})([\"width:100%;height:100%;position:relative;overflow:auto;& .error-overlay{background-color:rgba(255,255,255,0.8);position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;}\"]);"],"sourceRoot":""}