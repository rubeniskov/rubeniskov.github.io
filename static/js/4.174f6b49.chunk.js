(this["webpackJsonprubeniskov-website"]=this["webpackJsonprubeniskov-website"]||[]).push([[4],{773:function(e,n,t){"use strict";(function(e){var r=t(5),i=t(59),o=t(233),s=t.n(o),a=t(774),c=t.n(a),x=t(775),u=t(302),l=function(e,n,t){var r=e.createShader(t?e.VERTEX_SHADER:e.FRAGMENT_SHADER);return e.shaderSource(r,n),e.compileShader(r),e.getShaderParameter(r,e.COMPILE_STATUS)?null:e.getShaderInfoLog(r)};n.a=function(n,t,o){var a,v=Object(r.a)({},o),f=v.onError,m=v.attributes,d=v.uniforms,p=Object(i.a)(v,["onError","attributes","uniforms"]),h=c()(n),g=s()(n),b=h._gl;return Object(x.a)(t,(function(e,n){if(e)throw e;!function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.frag,t=void 0===n?u.fragment:n,i=e.vert,o=void 0===i?u.vertex:i,s=l(b,t);if(s&&f)return f(new Error(s));var a=h(Object(r.a)(Object(r.a)({},p),{},{frag:t,vert:o,attributes:Object(r.a)({position:h.buffer([[-1,-1],[-1,4],[4,-1]])},m),uniforms:Object(r.a)({time:h.prop("time"),resolution:h.prop("resolution")},d),count:3}));console.log(h._gl),h.frame((function(e){var n=e.time;h.clear({color:[0,0,0,0],depth:1}),a({time:n,resolution:[b.drawingBufferWidth,b.drawingBufferHeight]})}))}({frag:n})})),a=g,e.addEventListener&&e.addEventListener("resize",a,!1),function(){!function(n){e.removeEventListener&&e.removeEventListener("resize",n)}(g),h.destroy()}}}).call(this,t(8))},775:function(e,n,t){"use strict";(function(e){var r=t(776);n.a=function(n,t){var i=[{id:0,deps:{"glsl-noise/simplex/2d":1},file:"/private/tmp/test/test.glsl",source:n,entry:!0},{id:1,deps:{},file:"/private/tmp/test/node_modules/glsl-noise/simplex/2d.glsl",source:"//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : ijm\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//\n\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n    + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n\n#pragma glslify: export(snoise)\n",entry:!1}];e.nextTick((function(){t(null,String(r(i)))}))}}).call(this,t(6))},790:function(e,n,t){"use strict";t.r(n);var r=t(17),i=t(0),o=t(1),s=t(9),a=t(773);n.default=Object(s.c)((function(e){var n=e.className,t=e.value,s=e.onError,c=Object(o.useState)(),x=Object(r.a)(c,2),u=x[0],l=x[1],v=Object(o.useRef)(null);return Object(o.useLayoutEffect)((function(){if(v.current)return Object(a.a)(v.current,t,{onError:function(e){s&&s(s),l(e)}})}),[v,t,s]),Object(o.useLayoutEffect)((function(){l(null)}),[t]),Object(i.jsxs)("div",{className:n,children:[u&&Object(i.jsx)("div",{className:"error-overlay",children:Object(i.jsx)("pre",{children:Object(i.jsx)("code",{children:u.message})})}),Object(i.jsx)("canvas",{ref:v})]})})).withConfig({displayName:"glsl",componentId:"vb91tm-0"})(["width:100%;height:100%;position:relative;overflow:auto;& .error-overlay{background-color:rgba(255,255,255,0.8);position:absolute;top:0;left:0;width:100%;height:100%;z-index:1;}"])}}]);
//# sourceMappingURL=4.174f6b49.chunk.js.map